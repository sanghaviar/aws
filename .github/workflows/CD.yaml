name: Release

on:
  workflow_dispatch: # Manually trigger the release workflow

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Download Terraform plan artifact generated by CI pipeline
      - name: Download Terraform plan artifact
        uses: actions/download-artifact@v2
        with:
          name: terraform-plan
          # Replace `CI Workflow Name` with the name of your CI workflow
          workflow: 'Terraform-Apply-Infra-Release'
          workflow_id: ${{ github.event.workflow_run.id }}
          path: .terraform

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Apply Terraform changes
      - name: Terraform Apply
        run: terraform apply .terraform/tfplan -auto-approve

      # Tag the release
      - name: Create Git tag
        run: git tag v1.0.${{ github.run_number }}

      # Push tag to GitHub
      - name: Push Git tag
        run: git push origin v1.0.${{ github.run_number }}

      # Create a release in GitHub
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: v1.0.${{ github.run_number }}
          release_name: Release v1.0.${{ github.run_number }}
          body: |
            Release v1.0.${{ github.run_number }}
            Changes:
            - Added Terraform changes
          draft: false
          prerelease: false
